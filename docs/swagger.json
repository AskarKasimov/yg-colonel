{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "basePath": "/api/v1",
    "paths": {
        "/expression/add": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "expression"
                ],
                "summary": "Add an expression",
                "parameters": [
                    {
                        "description": "expression to calculate",
                        "name": "expression",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExpressionAdding"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "id of just created expression",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "incorrect body",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "unprocessed error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/expression/all": {
            "get": {
                "tags": [
                    "expression"
                ],
                "summary": "Get all expressions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Expression"
                            }
                        }
                    },
                    "500": {
                        "description": "unprocessed error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/expression/solve": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "expression"
                ],
                "summary": "Add a solve on expression",
                "parameters": [
                    {
                        "description": "solve of expression",
                        "name": "solve",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExpressionSolving"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "id of just created expression",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "incorrect body",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "unprocessed error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/expression/{id}": {
            "get": {
                "tags": [
                    "expression"
                ],
                "summary": "Get info about 1 expression",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Expression ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Expression"
                        }
                    },
                    "500": {
                        "description": "unprocessed error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/worker/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "worker"
                ],
                "summary": "Registrating worker in orchestrator",
                "parameters": [
                    {
                        "description": "expression to calculate",
                        "name": "expression",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExpressionAdding"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "id of just created expression",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "incorrect body",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "unprocessed error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/worker/want_to_calculate": {
            "get": {
                "tags": [
                    "worker"
                ],
                "summary": "One available expression for worker",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Expression"
                        }
                    },
                    "404": {
                        "description": "no rows now",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "unprocessed error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Error": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "models.Expression": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "incomingDate": {
                    "type": "integer"
                },
                "progress": {
                    "type": "string"
                },
                "vanilla": {
                    "type": "string"
                }
            }
        },
        "models.ExpressionAdding": {
            "type": "object",
            "required": [
                "expression"
            ],
            "properties": {
                "expression": {
                    "type": "string"
                }
            }
        },
        "models.ExpressionSolving": {
            "type": "object",
            "required": [
                "answer",
                "id"
            ],
            "properties": {
                "answer": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}