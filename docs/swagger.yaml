basePath: /api/v1
definitions:
  models.Error:
    properties:
      errorMessage:
        type: string
    type: object
  models.Expression:
    properties:
      answer:
        type: string
      id:
        type: integer
      incomingDate:
        type: integer
      progress:
        type: string
      vanilla:
        type: string
    type: object
  models.ExpressionAdding:
    properties:
      expression:
        type: string
    required:
    - expression
    type: object
  models.ExpressionSolving:
    properties:
      answer:
        type: string
      id:
        type: integer
    required:
    - answer
    - id
    type: object
info:
  contact: {}
paths:
  /expression/{id}:
    get:
      parameters:
      - description: Expression ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Expression'
        "500":
          description: unprocessed error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get info about 1 expression
      tags:
      - expression
  /expression/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: expression to calculate
        in: body
        name: expression
        required: true
        schema:
          $ref: '#/definitions/models.ExpressionAdding'
      responses:
        "200":
          description: id of just created expression
          schema:
            type: string
        "400":
          description: incorrect body
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: unprocessed error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Add an expression
      tags:
      - expression
  /expression/all:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Expression'
            type: array
        "500":
          description: unprocessed error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get all expressions
      tags:
      - expression
  /expression/solve:
    post:
      consumes:
      - application/json
      parameters:
      - description: solve of expression
        in: body
        name: solve
        required: true
        schema:
          $ref: '#/definitions/models.ExpressionSolving'
      responses:
        "200":
          description: id of just created expression
          schema:
            type: string
        "400":
          description: incorrect body
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: unprocessed error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Add a solve on expression
      tags:
      - expression
  /worker/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: expression to calculate
        in: body
        name: expression
        required: true
        schema:
          $ref: '#/definitions/models.ExpressionAdding'
      responses:
        "200":
          description: id of just created expression
          schema:
            type: string
        "400":
          description: incorrect body
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: unprocessed error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Registrating worker in orchestrator
      tags:
      - worker
  /worker/want_to_calculate:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Expression'
        "404":
          description: no rows now
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: unprocessed error
          schema:
            $ref: '#/definitions/models.Error'
      summary: One available expression for worker
      tags:
      - worker
swagger: "2.0"
